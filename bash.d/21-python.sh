#!/usr/bin/env bash
# vim: ft=sh:ts=2:sts=2:et:

###
### mvf
### Python

_bashrc_verbose "== Python"

# Disable __pycache__ dirs
# https://docs.python-guide.org/writing/gotchas/#disabling-bytecode-pyc-files
export PYTHONDONTWRITEBYTECODE=1

###
### Pip
###
# Tip: pip completion
# pip completion --bash > ~/bash_completion.d/pip.bash-completion


###
### venv
###
# virtualenv: disable '(venv)' prefix in PS1
export VIRTUAL_ENV_DISABLE_PROMPT=1

function __venv_ps1() {
    if [ "${VIRTUAL_ENV}" ]
    then
# #     msg = "${green}[${yellow}üêç ${VIRTUAL_ENV##*/}${green}]"
# #     echo -n 'üêç '
        echo -n "[${VIRTUAL_ENV##*/}]üêç"
    fi
}


###
### Pyenv
###   https://github.com/pyenv/pyenv
###
# export PYENV_ROOT=~/.pyenv
export PYENV_ROOT="$HOME/.pyenv"
if [ -d $PYENV_ROOT/bin ]
then
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init - bash)"

    _bashrc_verbose "-- Pyenv: enabled"
fi


###
### pipenv
###
# pipenv: Pipfile.lock
if _cmd_exists pipenv
then
    export PIPENV_CUSTOM_VENV_NAME=venv
    export PIPENV_VENV_IN_PROJECT=1
    export PIPENV_VERBOSITY=-1
    export PIPENV_DEFAULT_PYTHON_VERSION=3

    eval "$(_PIPENV_COMPLETE=bash_source pipenv)"

    ##
    ## Generated by
    ##   _PIPENV_COMPLETE=bash_source pipenv
    ##
    _pipenv_completion() {
        local IFS=$'\n'
        local response

        response=$(env COMP_WORDS="${COMP_WORDS[*]}" COMP_CWORD=$COMP_CWORD _PIPENV_COMPLETE=bash_complete $1)

        for completion in $response; do
            IFS=',' read type value <<< "$completion"

            if [[ $type == 'dir' ]]; then
                COMPREPLY=()
                compopt -o dirnames
            elif [[ $type == 'file' ]]; then
                COMPREPLY=()
                compopt -o default
            elif [[ $type == 'plain' ]]; then
                COMPREPLY+=($value)
            fi
        done

        return 0
    }

    _pipenv_completion_setup() {
        complete -o nosort -F _pipenv_completion pipenv
    }

    _pipenv_completion_setup;
fi
